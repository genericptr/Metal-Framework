unit MetalForm;

{$mode objfpc}{$H+}
{$modeswitch objectivec1}

interface

uses
  CocoaAll,
  Classes, SysUtils, FileUtil, Forms, StdCtrls, Controls, Graphics, Dialogs;


// TODO: first thing we need to figure out how to get an NSWindow
// or if we're getting that at all!
// then just make a generic NSView subclass and see if we can draw, get events etc...

// http://docs.getlazarus.org/#lcl+controls+tcontrol#

type
	TMetalControl = class (TCustomControl)
		public

			procedure MouseDown(Button: TMouseButton; Shift:TShiftState; X,Y:Integer); override;
			procedure MouseMove(Shift: TShiftState; X,Y: Integer); override;
			procedure MouseUp(Button: TMouseButton; Shift:TShiftState; X,Y:Integer); override;

			procedure RealizeBounds; override;
			procedure DestroyWnd; override;
			procedure Paint; override;
	end;

type
  TMetalForm = class(TForm)
  	public
    	constructor Create(TheOwner: TComponent); override;
    	destructor Destroy; override;
	  private
  		ExitButton1: TButton;
	  	procedure ExitButton1Click(Sender: TObject);
	  public
	  	procedure FormResize(Sender: TObject);
  end;

var
  Form1: TMetalForm;

implementation

{$R *.lfm}

{=============================================}
{@! ___METAL CONTROL___ } 
{=============================================}

procedure TMetalControl.MouseDown(Button: TMouseButton; Shift:TShiftState; X,Y:Integer);
begin
	inherited;
	writeln('mouse down ', x, ',', y);
end;

procedure TMetalControl.MouseMove(Shift: TShiftState; X,Y: Integer);
begin
	inherited;

	writeln('mouse moved ', x, ',', y);
end;

procedure TMetalControl.MouseUp(Button: TMouseButton; Shift:TShiftState; X,Y:Integer);
begin
	inherited;

	writeln('mouse up ', x, ',', y);
end;

procedure TMetalControl.RealizeBounds;
begin
	inherited;
	
	writeln('resize');
end;

procedure TMetalControl.DestroyWnd;
begin
	writeln('finalize');

	inherited;
end;

procedure TMetalControl.Paint;
begin
	writeln('draw');

end;

{=============================================}
{@! ___FORM___ } 
{=============================================}

procedure TMetalForm.FormResize(Sender: TObject);
begin
  ExitButton1.SetBounds(Width-90, 5, 80, 25);
end;

procedure TMetalForm.ExitButton1Click(Sender: TObject);
begin
	writeln('exit');
  Close;
end;

constructor TMetalForm.Create(TheOwner: TComponent);
var
	metalControl: TMetalControl;
begin
	inherited CreateNew(TheOwner);

	writeln('TMetalForm.Create');

	writeln('handle: ', NSView(Handle).description.UTF8String);
	writeln('window: ', NSView(Handle).window.description.UTF8String);

  {$ifdef LCLCocoa}
  writeln('LCLCocoa');
  {$endif}

	metalControl:=TMetalControl.Create(Self);
	with metalControl do begin
	  Parent:=Self;
	  SetBounds(0,0,100,100);
	end;
	writeln('metal control handle: ', NSView(metalControl.Handle).description.UTF8String);

	OnResize:=@FormResize;

	ExitButton1:=TButton.Create(Self);
	with ExitButton1 do begin
	  Name:='ExitButton1';
	  Parent:=Self;
	  SetBounds(320,10,80,25);
	  Caption:='Exit';
	  OnClick:=@ExitButton1Click;
	end;
end;

destructor TMetalForm.Destroy;
begin
	writeln('TMetalForm.Destroy');

	inherited Destroy;
end;

end.

